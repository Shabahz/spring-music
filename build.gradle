buildscript {
    ext {
        springBootVersion = '1.3.5.RELEASE'
        springCloudConnectorsVersion = '1.2.2.RELEASE'
    }

    repositories {
	    flatDir dirs: 'libs'
        jcenter()
        mavenCentral()
        maven { url "https://repo.spring.io/plugins-release" }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'com.dynatrace.diagnostics.automation:gradle.plugin:6.5.0'
    }
}

apply plugin: 'java'

apply plugin: 'eclipse-wtp'
apply plugin: 'idea'

apply plugin: 'spring-boot'
apply plugin: 'dynatrace-gradle-plugin'

version = '1.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext.systemProperties= System.properties
println "System property dtTestrunID is ${systemProperties.dtTestrunID}"

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/snapshot" }
}

dependencies {
    // Spring Boot
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.springframework.boot:spring-boot-starter-data-mongodb"
    compile "org.springframework.boot:spring-boot-starter-redis"

    // Spring Cloud Connectors
    compile "org.springframework.cloud:spring-cloud-core:${springCloudConnectorsVersion}"
    compile "org.springframework.cloud:spring-cloud-spring-service-connector:${springCloudConnectorsVersion}"
    compile "org.springframework.cloud:spring-cloud-cloudfoundry-connector:${springCloudConnectorsVersion}"

    // JPA Persistence
    compile "commons-dbcp:commons-dbcp"
    runtime "com.h2database:h2"
    runtime "mysql:mysql-connector-java"
    runtime "postgresql:postgresql:9.1-901-1.jdbc4"

    // Redis Persistence
    compile "redis.clients:jedis"

    // Webjars
    compile "org.webjars:bootstrap:3.1.1"
    compile "org.webjars:angularjs:1.2.16"
    compile "org.webjars:angular-ui:0.4.0-2"
    compile "org.webjars:angular-ui-bootstrap:0.10.0-1"
    compile "org.webjars:jquery:2.1.0-2"

    // Testing
    testCompile (group: 'junit', name: 'junit', version: '4.12') {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    testCompile group: 'org.springframework', name: 'spring-test'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testCompile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.2.0'
    testCompile group: 'com.jayway.jsonpath', name: 'json-path-assert', version: '2.2.0'

}
task PrintAgentInfo() << {
	print DtGetAgentInfo.agentName
}
// inject dtagent into test task JVM arguments
task InjectAgent {
        doLast {
	    test.jvmArgs '-agentpath:/opt/dynatrace-6.5/agent/lib64/libdtagent.so=name=Spring-Music-test,server=192.168.1.48,wait=5,optionTestRunIdJava=' + "${systemProperties.dtTestrunID}"
        }
}

test.dependsOn InjectAgent


dynaTrace {
    username = 'admin'
    password = 'admin'
    serverUrl = 'https://192.168.1.48:8021'
    profile = 'Spring-Music'
    ignoreSSLErrors = true
}

DtGetAgentInfo {
	infoForAgentByIndex = 0
	//infoForAgentByName = 'someName'
	
	finalizedBy PrintAgentInfo
}

DtStartTest {
	versionBuild = 1
	versionMajor = 2
	versionMinor = 3
	versionRevision = 4
	versionMilestone = 5
	platform = 'Linux'
	marker = 'marker'
	category = 'unit'

    addCustomProperty 'testset', 'unit-tests'
}


jar {
    baseName = "spring-music"
    version = "" // omit the version from the war file name
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14'
}

test {
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
}
